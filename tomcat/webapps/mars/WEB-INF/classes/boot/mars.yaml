---
boot:
  params:
    locales: fr_FR, en_US
  plugins:
    - io.vertigo.core.plugins.resource.classpath.ClassPathResourceResolverPlugin: {}
    - io.vertigo.core.plugins.resource.local.LocalResourceResolverPlugin: {}
    - io.vertigo.core.plugins.resource.url.URLResourceResolverPlugin: {}
    - io.vertigo.core.plugins.param.properties.PropertiesParamPlugin:
        __flags__: ["ethereum"]
        url: "${boot.walletParamsUrl}"
    - io.vertigo.core.plugins.param.properties.PropertiesParamPlugin:
        __flags__: ["klee"]
        url: "${boot.apiKeysUrl}"
    - io.vertigo.core.plugins.param.properties.PropertiesParamPlugin:
        __flags__: ["home"]
        url: D:\mars\marsconf\marsApiKeys.properties
    - io.vertigo.vega.plugins.webservice.servlet.WebAppContextParamPlugin: {}
    - io.vertigo.core.plugins.param.xml.XmlParamPlugin:
        url : "/boot/config/application-config.xml" 
modules:
  io.vertigo.commons.CommonsFeatures:
    features:
      - script:
      - cache:
      - redis:
          __flags__: ["klee"]
          host: ${redisHost}
          port: 6379
          database: 0
      - command:
    featuresConfig:
      - script.janino:
      - cache.memory:
      - analytics.socketLoggerConnector:
          __flags__: ["klee"]
          appName: mars-analytics
          hostName: ${analyticsHost}
  io.vertigo.database.DatabaseFeatures:
    features:
      - sql:
      - timeseries:
    featuresConfig:
      - timeseries.influxdb: 
          __flags__: ["klee"]
          host: ${influxdbHost}
          user: user
          password: password
          dbNames: mars-test;*
      - timeseries.fake:
          __flags__: ["home"]
      - sql.datasource:
          __flags__: ["klee"]
          classname: io.vertigo.database.impl.sql.vendor.postgresql.PostgreSqlDataBase
          source: java:/comp/env/jdbc/DataSource
      - sql.datasource:
          __flags__: ["home"]
          classname: io.vertigo.database.impl.sql.vendor.h2.H2DataBase
          source: java:/comp/env/jdbc/DataSourceHome
  io.vertigo.dynamo.DynamoFeatures:
    features:
      - store:
      - kvStore:
      - search:
      - domainMetrics:
    featuresConfig:
      - store.data.sql:
      - store.data.sql:
          dataSpace: orchestra
      - collections.luceneIndex:
      - search.elasticsearchEmbedded:
          __flags__: ["home"]
          home: search/
          envIndex: mars
          rowsPerQuery: 50
          config.file: search/elasticsearch.yml
      - search.elasticsearchTransport:
          __flags__: ["klee"]
          servers.names: ${esHost}
          envIndex: mars
          cluster.name: mars
          rowsPerQuery: 50
          config.file: search/elasticsearch.yml
      - store.file.db:
          __flags__: ["klee"]
          storeDtName: DtMediaFileInfo
      - store.file.filesystem:
          __flags__: ["home"]
          storeDtName: DtMediaFileInfo
          path: ${user.home}/marsFiles/
      - store.file.fullFilesystem:
          name: temp
          path: ${java.io.tmpdir}/marsFiles/
          purgeDelayMinutes: 30
      - kvStore.delayedMemory:
          collections: protected-value
          timeToLiveSeconds: 3600
      - kvStore.berkeley:
          collections: VViewContext;TTL=43200
          dbFilePath: ${java.io.tmpdir}/vertigo-ui/MarsVViewContext
  io.vertigo.account.AccountFeatures:
    features:
      - security:
          userSessionClassName: io.mars.support.MarsUserSession
      - account:
      - authentication:
      - authorization:
    featuresConfig:
      - account.store.store:
          userIdentityEntity: DtPerson
          groupIdentityEntity: DtGroups
          userAuthField: email
          photoFileInfo: FiFileInfoStd
          userToAccountMapping: 'id:personId, displayName:lastName, email:email, authToken:email, photo: picturefileId'
          groupToGroupAccountMapping: 'id:groupId, displayName:name'
      - authentication.text:
          filePath: /io/mars/support/userAccounts.txt
  io.vertigo.vega.VegaFeatures:
    features:
        - webservices:
    featuresConfig:
        - webservices.token:
            tokens: mars-api
        - webservices.rateLimiting:
        - webservices.security:
        - webservices.apiPrefix:
            apiPrefix: /api
  io.vertigo.orchestra.OrchestraFeatures:
    featuresConfig:
      - orchestra.database:
          nodeName: MARS1
          daemonPeriodSeconds: 30
          workersCount: 10
          forecastDurationSeconds: 60
      - orchestra.webapi:
  io.vertigo.social.SocialFeatures:
    features:
      - notifications:
      - comments:
      - handles:
      - webapi:
    featuresConfig:
      - notifications.redis:
          __flags__: ["klee"]
      - notifications.memory:
          __flags__: ["home"]
      - comments.redis:
          __flags__: ["klee"]
      - comments.memory:
          __flags__: ["home"]
      - handles.redis:
          __flags__: ["klee"]
      - handles.memory:
          __flags__: ["home"]
  io.vertigo.dashboard.DashboardFeatures:
    features:
      - analytics:
          appName: mars-analytics
  io.vertigo.ledger.LedgerFeatures:
    featuresConfig:
      - ledger.ethereum:
          __flags__: ["ethereum"]
          urlRpcEthNode: ${ledgerHost}
          myAccountName: ${myAccountName}
          myPublicAddr: ${myPublicAddr}
          defaultDestAccountName: ${myAccountName}
          defaultDestPublicAddr: ${myPublicAddr}
          walletPassword: ${walletPassword}
          walletPath: ${walletPath}
      - ledger.fake:
          __flags__: ["!ethereum"]
  io.mars.support.SupportFeatures:
  io.mars.catalog.CatalogFeatures:
  io.mars.hr.HrFeatures:
  io.mars.basemanagement.BasemanagementFeatures:
    features:
      - mqtt:
          __flags__: ["klee"]
          host: ${mosquittoHost}
  io.mars.maintenance.MaintenanceFeatures:
  io.mars.opendata.OpendataFeatures:
  io.mars.job.JobFeatures:
  io.mars.datageneration.DataGenerationFeatures:
    features:
      - datageneration:
          initialEquipmentUnits: 1500
  io.mars.home.HomeFeatures:
  io.mars.command.CommandFeatures:
initializers:
  - io.mars.support.boot.DataBaseInitializer:
      __flags__: ["initdb"]
  - io.mars.support.boot.I18nResourcesInitializer:
  - io.mars.support.boot.SearchInitializer:
  - io.mars.support.boot.OrchestraInitializer:
