package io.mars.basemanagement.search

create IndexDefinition IdxEquipment {  
  keyConcept : DtEquipment
  dtIndex : DtEquipmentIndex 
  indexCopyTo allText { from: "name,code,description,tags,equipmentTypeName,equipmentCategoryName" }
  loaderId : "EquipmentSearchLoader"
}

create FacetDefinition FctEquipmentEquipmentTypeName {
	dtDefinition:DtEquipmentIndex, fieldName:"equipmentTypeName", label:"Equipment Type"
}

create FacetDefinition FctEquipmentEquipmentCategoryName {
	dtDefinition:DtEquipmentIndex, fieldName:"equipmentCategoryName", label:"Equipment Category"
} 

create FacetDefinition FctEquipmentPurchaseDate {
	dtDefinition:DtEquipmentIndex, fieldName:"purchaseDate", label:"Purchase Date"
	range r1 { filter:"purchaseDate:[01/01/2008 TO 01/01/2012]", label:"2008-2012"},
	range r2 { filter:"purchaseDate:[01/01/2012 TO 01/01/2016]", label:"2012-2016"},
	range r3 { filter:"purchaseDate:[01/01/2016 TO *]", label:"after 2016"}
}

create FacetedQueryDefinition QryEquipment {
	keyConcept : DtEquipment
	facets : [FctEquipmentEquipmentTypeName, FctEquipmentPurchaseDate, FctEquipmentEquipmentCategoryName ]
	domainCriteria : DoLabel
	listFilterBuilderClass : "io.vertigo.dynamox.search.DslListFilterBuilder"  
	listFilterBuilderQuery : "allText:#+query*#"
}